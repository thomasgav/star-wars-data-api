services:
  db:
    build:
      context: .
      dockerfile: ./docker/local/postgres/Dockerfile
    image: star-wars-postgres:latest
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    env_file:
      - .env
    networks:
      - star-wars-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $POSTGRES_USER -d $POSTGRES_DB"]
      interval: 5s
      timeout: 5s
      retries: 5

  api:
    build:
      context: .
      dockerfile: ./docker/local/django/Dockerfile
    image: star-wars-django:latest
    entrypoint: ["/entrypoint.sh"]
    command: /start.sh
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    ports:
      - "8000:8000"
    volumes:
      - .:/app:z
      - static_volume:/app/staticfiles
      - media_volume:/app/mediafiles
    env_file:
      - .env
    networks:
      - star-wars-network
    # expose:
    #   - "8000"
    stdin_open: true
    tty: true

  redis:
    image: redis:7-alpine
    networks:
      - star-wars-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5

  celery-worker:
    build:
      context: .
      dockerfile: ./docker/local/django/Dockerfile
    image: star-wars-worker:latest
    command: /start-celery-worker.sh
    volumes:
      - .:/app:z
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - star-wars-network

  # celery-beat:
  #   build:
  #     context: .
  #     dockerfile: ./docker/local/celery/Dockerfile
  #   image: star-wars-celery:latest
  #   command: /start-celery-beat.sh
  #   volumes:
  #     - .:/app:z
  #   env_file:
  #     - .env
  #   depends_on:
  #     db:
  #       condition: service_healthy
  #     redis:
  #       condition: service_healthy
  #   networks:
  #     - star-wars-network

  flower:
    build:
      context: .
      dockerfile: ./docker/local/django/Dockerfile
    image: star-wars-flower:latest
    command: /start-flower.sh
    volumes:
      - flower_data:/data
    env_file:
      - .env
    ports:
      - "5555:5555"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - star-wars-network


networks:
    star-wars-network:
        driver: bridge


volumes:
  static_volume:
  media_volume:
  postgres_data: {}
  flower_data: {}